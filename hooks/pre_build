#!/bin/bash
export DOCKER_CLI_EXPERIMENTAL=enabled
echo "[***] Prebuild - Trying to update Docker and enable experimental commands."

apt-get update -qq
apt-get install -y jq
mkdir -p /etc/docker /root/.docker

# Nightmare to ensure experimental is enabled, though the environment variable should cover most of it...
if [[ -e "/root/.dockercfg" && ! -e "/root/.docker/config.json" ]]; then
	ln -s /root/.dockercfg /root/.docker/config.json
	jq '.experimental="enabled"' "/root/.dockercfg" > "/root/.dockercfg.2"
        mv "/root/.dockercfg.2" "/root/.dockercfg"
fi

if [[ ! -e "/root/.docker/config.json" ]]; then
	jq -n '.experimental="enabled"' > "/root/.docker/config.json"
elif [[ -e "/root/.docker/config.json" && ! -h "/root/.docker/config.json" ]]; then
	jq -n '.experimental="enabled"' "/root/.docker/config.json" > "/root/.docker/config.json.2"
	mv "/root/.docker/config.json.2" "/root/.docker/config.json"
fi

if [[ ! -e "/etc/docker/daemon.json" ]]; then
	jq -n '.experimental=true' > "/etc/docker/daemon.json"
else
	jq -n '.experimental=true' "/etc/docker/daemon.json" > "/etc/docker/daemon.json.2"
	mv "/etc/docker/daemon.json.2" "/etc/docker/daemon.json"
fi


echo "[***] Info about the OS"
cat /etc/*-release

echo "[***] Updating whichever docker is present"
if [[ -n "$(which docker)" ]]; then
	apt-get install -y $(dpkg -S $(which docker) | cut -d':' -f1) $(dpkg -S $(which docker) | cut -d':' -f1)-cli containerd.io
else
	apt-get install -y docker-de docker-ce-cli containerd.io
fi

echo "[***] Adding qemu-user-static container, and binfmt"
docker run --rm --privileged multiarch/qemu-user-static:register --reset
docker run --privileged linuxkit/binfmt:v0.7
echo
