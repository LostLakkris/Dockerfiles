#!/bin/bash
export DOCKER_CLI_EXPERIMENTAL=enabled
echo "[***] build - Trying to use docker buildx to construct the images instead."

FROM=$(awk '/^FROM/{print $NF}' "${DOCKERFILE_PATH}" | tail -n 1)

echo "[***] build - Identifying origin platforms for reuse."
PLATFORMS=""
for PLAT in $(docker manifest inspect "${FROM}" | jq -c --raw-output '.manifests[].platform'); do
	echo "PLAT: ${PLAT}"
	PLAT_OS=$(echo "${PLAT}" | jq -c --raw-output '.os')
	PLAT_ARCH=$(echo "${PLAT}" | jq -c --raw-output '.architecture')
	PLAT_VARIANT=$(echo "${PLAT}" | jq -c --raw-output '.variant')
	echo "Detected remote: ${PLAT_OS} - ${PLAT_ARCH}"
	if [[ -n "${PLATFORMS}" ]]; then
		PLATFORMS+=","
	fi
	PLATFORMS+="${PLAT_OS}/${PLAT_ARCH}"
	if [[ -n "${PLAT_VARIANT}" && "${PLAT_VARIANT}" != "null" ]]; then
		PLATFORMS+="/${PLAT_VARIANT}"
	fi
done
if [[ -z "${PLATFORMS}" ]]; then
	PLATFORMS="linux/amd64"
fi

echo "[***] build - Create and use buildx context"
docker buildx create --name $(echo ${DOCKER_REPO} | awk -F '/' '{print $NF}')
docker buildx use $(echo ${DOCKER_REPO} | awk -F '/' '{print $NF}')
docker buildx inspect --bootstrap
docker buildx ls

echo "[***] build - Inspect whats already been published to the hub"
docker manifest inspect "${DOCKER_REPO}"
docker buildx imagetools inspect "${DOCKER_REPO}"

echo "[***] build - Starting build+push of '${DOCKERFILE_PATH}' to '${IMAGE_NAME#*/}'"
echo "[***] build - Platform string: '${PLATFORMS}'"
docker buildx build --platform "${PLATFORMS}" -t "${IMAGE_NAME#*/}" -f "${DOCKERFILE_PATH}" --push .
