#!/bin/bash
ESP_MAP=(
"linux/amd64,esphome/esphome"
"linux/386,esphome/esphome-i386"
"linux/arm/v7,esphome/esphome-armv7"
"linux/arm64,esphome/esphome-aarch64"
)

DOCKER_TAGS=()

# Determine version to be built
LATEST_VERSION=$(cat ${CONTAINER}.LATEST)
THIS_VERSION=$(tail -n1 ${CONTAINER}.VERSIONS)

# See if this version has explicitly been defined
docker manifest inspect "${DOCKER_ORG}/${CONTAINER}:${THIS_VERSION}" &>/dev/null
if [[ $? -eq 0 ]]; then
	echo "[***] ${STAGE} - ${DOCKER_ORG}/${CONTAINER}:${THIS_VERSION} already exists."
	exit 0
fi

DOCKER_TAGS+=( "${DOCKER_ORG}/${CONTAINER}:${THIS_VERSION}" )

# Determine necessary tags
SUBTAG=${THIS_VERSION}
while [[ -n "${SUBTAG//[^.]}" ]]; do
	LATEST_MATCH=$(awk "/${SUBTAG%.**}/ {a=\$0} END{print a}" "${CONTAINER}.VERSIONS")
	if [[ "${LATEST_MATCH}" == "${THIS_VERSION}" ]]; then
		DOCKER_TAGS+=( "${DOCKER_ORG}/${CONTAINER}:${SUBTAG%.**}" )
		echo "[***] ${STAGE} - Queing tag ${DOCKER_ORG}/${CONTAINER}:${SUBTAG%.**}"
	fi
	SUBTAG=${SUBTAG%.**}
done

if [[ -n "${LATEST_VERSION}" && -n "${THIS_VERSION}" && "${LATEST_VERSION}" == "${THIS_VERSION}" ]]; then
	DOCKER_TAGS+=( "${DOCKER_ORG}/${CONTAINER}:latest" )
fi

# Determine what origin versions even exist
MANIFEST_MAP=()
for i in $(seq 0  $(( ${#ESP_MAP[@]} - 1)) ); do
	docker manifest inspect "${ESP_MAP[${i}]#*,}:${THIS_VERSION}" &>/dev/null
	if [[ $? -eq 0 ]]; then
		MANIFEST_MAP+=( "${ESP_MAP[${i}]}:${THIS_VERSION}" )
	fi
done

echo "[***] ${STAGE} - Tags queued: ${DOCKER_TAGS[@]}"

for TAG in ${DOCKER_TAGS[@]}; do
	docker manifest create ${TAG} ${MANIFEST_MAP[@]#*,}
	for ENTRY in ${MANIFEST_MAP[@]}; do
		DOCKER_OS=$(echo ${ENTRY%,*} | cut -d'/' -f1)
		DOCKER_ARCH=$(echo ${ENTRY%,*} | cut -d'/' -f2)
		DOCKER_VARIANT=$(echo ${ENTRY%,*} | cut -d'/' -f3)
		if [[ -z "${DOCKER_VARIANT}" ]]; then
			docker manifest annotate --os ${DOCKER_OS} --arch ${DOCKER_ARCH} ${TAG} ${ENTRY#*,}
		else
			docker manifest annotate --os ${DOCKER_OS} --arch ${DOCKER_ARCH} --variant ${DOCKER_VARIANT} ${TAG} ${ENTRY#*,}
		fi
	done
	docker manifest push ${TAG}
done
